@using Domain
@using ProjectAndTeamManagement.Models
@using ProjectAndTeamManagement.Models.DepartmentLead

@{
    ViewData["Title"] = "Project Assignments";
}

@model ListsVM
<h2>Project Assignments</h2>
<h4>Department Lead</h4>


<div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Email</th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Project</th>
                <th scope="col">Team</th>
                <th scope="col">Team Lead</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var employee in Model.Employees)
            {
                @if (employee.RoleId != "1" && employee.RoleId != "2")
                {
                    <tr>
                        <td>@employee.Email</td>
                        <td>@employee.FirstName</td>
                        <td>@employee.LastName</td>
                        <td>@employee.Project?.Name</td>
                        <td>@employee.Team?.TeamName</td>
                        <td>@Model.Employees.FirstOrDefault(x => x.Id == employee.Team?.TeamLeadId)</td>
                        <td>
                            @if (@employee.Project?.Name == "Unassigned")
                            {
                                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddEmployeeToProject", "Employee", employee)'">Add to project</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("RemoveEmployeeFromProject", "Employee", employee)'">Remove from project</button>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>